[common]
root_dir = .
data_dir = ./sorted_D3

#orientation = NO if not using Orientation from MONAI (careful with that, specially if augmentation is used)
#PIL orientation for training (Coronal with depth,height,width order)
# PIL = coronal / RIP = sagittal / SPL = axial
orientation = PIL

# Make sure it is compatible with chosen orientation
#pixel_dim = 3.5, 1.171875, 1.171875
pixel_dim = 6, 1.171875, 1.171875 

#window_size = 1, 64, 64
#window_size = 1, 72, 72
window_size = 3, 84, 84 

#input_type = R, I (real, imaginary) M, P (magnitude, phase)
input_type = R

#in_channels = 1 or 2 or 3 (if 2, will combine a pair RI or MP depending on input_type, if 3 will combine MPA images)
in_channels = 2     
out_channels = 3

#label_type = shaft, tip, both, multi
label_type = multi
model_file = model_RI_multi_CEDice_5000_PIL_t3_t6_D3_w84_bias_600epoch_Unet4_3D.pth

[training]
use_tensorboard = 1
use_matplotlib = 1
max_epochs = 600
training_name = RI_multi_CEDice_5000_PIL_t3_t6_D3_w84_bias_600epoch_Unet4_3D

training_device_name = cuda:0
#training_device_name = cpu

# Add random field bias: random_bias = 0 or probability of random bias (0.9)
random_bias = 0.9
# Add random intensity noise: random_noise = 0 or probability of random noise (0.8)
random_noise = 0.8
# Add random intensity spike noise in k-space: random_spike = 0 or probability of random spike noise (0.9)
random_spike = 0
# Data agumentation: random_flip = 0 or probability of random flip (0.5)
random_flip = 0.5
# Data augmentation: random_zoom = 0 or probability of random zoom (0.5)
random_zoom = 0.5

[test]
test_device_name = cuda:0
#test_device_name = cpu

[inference]
inference_device_name = cuda:0
#inference_device_name = cpu
